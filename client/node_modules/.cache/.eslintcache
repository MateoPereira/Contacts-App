[{"/home/mateo/Escritorio/programacion/Contacts-App/client/src/index.js":"1","/home/mateo/Escritorio/programacion/Contacts-App/client/src/App.js":"2","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/ReadTerms.js":"3","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/MainPage.js":"4","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/SignIn.js":"5","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/SignUp.js":"6","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Profile.js":"7","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Logout.js":"8","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Contacts.js":"9","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Add.js":"10","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Edit.js":"11"},{"size":446,"mtime":1655550399774,"results":"12","hashOfConfig":"13"},{"size":1525,"mtime":1655631697380,"results":"14","hashOfConfig":"13"},{"size":222,"mtime":1655550500684,"results":"15","hashOfConfig":"13"},{"size":692,"mtime":1655550399770,"results":"16","hashOfConfig":"13"},{"size":3931,"mtime":1655561114425,"results":"17","hashOfConfig":"13"},{"size":5906,"mtime":1655561073749,"results":"18","hashOfConfig":"13"},{"size":3182,"mtime":1655631103771,"results":"19","hashOfConfig":"13"},{"size":511,"mtime":1655583201644,"results":"20","hashOfConfig":"13"},{"size":4894,"mtime":1655631911539,"results":"21","hashOfConfig":"13"},{"size":2474,"mtime":1655624682093,"results":"22","hashOfConfig":"13"},{"size":2701,"mtime":1655629930475,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yf95uk",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mateo/Escritorio/programacion/Contacts-App/client/src/index.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/App.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/ReadTerms.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/MainPage.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/SignIn.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/SignUp.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Profile.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Logout.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Contacts.js",["58"],[],"import React, { useEffect, useState } from 'react'\nimport { useNavigate, NavLink } from 'react-router-dom'\nimport { Dropdown, Card, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport AddModal from './Add'\nimport EditModal from './Edit'\n\nexport default function Contacts({name, setName}) {\n  const [contactsList, setContactsList] = useState([])\n  const [showAddModal, setShowAddModal] = useState(false)\n  const [showEditModal, setShowEditModal] = useState(false)\n  const navigate = useNavigate()\n\n  const instance = axios.create({\n    baseURL: 'http://localhost:8000/',\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  })\n  \n  useEffect(()=>{ // Get contacts or redirect to sign in if not authenticated.\n    const getContacts = async ()=>{\n      try {\n        const res = await instance.get('/contacts');\n        setContactsList(res.data);\n        const prof = await instance.get('/profile')\n        setName(prof.data.fullname)\n      }\n      catch(err){\n        navigate('/signin')\n      }\n    }\n    getContacts()  \n  }, [setContactsList, contactsList])\n\n  const deleteContact = async (id)=>{\n    const confirmation = window.confirm('Are you sure you want delete this contact?')\n    if (confirmation) {\n      try {\n        await instance.post(`/contacts/delete/${id}`)\n      } catch(err){}  \n    }\n    \n  }\n\n  \n\n  return (\n    <>\n      <header className='dropdown-header d-flex justify-content-between' style={{ backgroundColor: \"rgb(120, 120, 140)\" }}>\n        <h6 className='d-inline text-dark'>\n          <NavLink to=\"/profile\" className='text-dark'>{name}</NavLink>\n        </h6>\n        <Button className='btn btn-success' style={{fontSize: '30px'}} onClick={()=>setShowAddModal(!showAddModal)}>\n          Create new contact\n        </Button>\n        <Dropdown className='d-inline'>\n          <Dropdown.Toggle className='dropdown border-0 text-dark' style={{background: 'transparent'}}>\n            <i className=\"fa-solid fa-bars\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu style={{background: '#6198ff52'}}>\n            <Dropdown.Item className='dropdown-item'>\n              <NavLink \n              to='/profile' \n              className={({ isActive }) => \"text-dark \" + (isActive ? \"border-bottom border-dark\" : null)}>\n                Profile\n                <i className=\"fa-solid fa-user ms-3\"></i>\n              </NavLink>  \n            </Dropdown.Item>\n            <Dropdown.Item className='dropdown-item'>\n              <NavLink \n              to='/contacts' \n              className={({ isActive }) => \"text-dark \" + (isActive ? \"border-bottom border-dark\" : null)}>\n                Contacts\n                <i className=\"fa-solid fa-address-card ms-3\"></i>\n              </NavLink>\n            </Dropdown.Item>\n            <Dropdown.Item className='dropdown-item'>\n              <NavLink \n                to='/logout' \n                className={({ isActive }) => \"text-dark \" + (isActive ? \"border-bottom border-dark\" : null)}>\n                  Log out\n                  <i className=\"fa-solid fa-arrow-right-from-bracket ms-3\"></i>\n              </NavLink>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>  \n      </header>\n      <main>\n      <ul className='d-flex justify-content-center flex-wrap'>\n          {contactsList.map((contact) => (\n              <li key={contact.contactId} className=\"d-inline mx-3\">\n                <Card className='d-inline-block text-center mt-4' style={{background: '#99ea8d91', borderRadius: '10px'}}>\n                  <Card.Body style={{height: '150px'}}>\n                    <Card.Title>\n                      <h2>{contact.name}</h2>\n                    </Card.Title>\n                    <p className='text-muted mt-2 h6 secondary-text'>{contact.created_at.slice(0, 10)}</p>\n                    <p className='h5 mt-4 secondary-text'>{contact.email}</p>\n                  </Card.Body>\n                  <Card.Footer style={{height: '70px'}} className='d-flex align-items-center'>\n                    <Button className='btn btn-warning me-2' onClick={()=>setShowEditModal(!showEditModal)}>Edit contact</Button>\n                    <Button className='btn btn-danger' onClick={()=>deleteContact(contact.contactId)}>Delete contact</Button>\n                  </Card.Footer>\n                </Card>\n                {showEditModal ? (\n                  <EditModal\n                    show={showEditModal}\n                    setShow={setShowEditModal}\n                    name={contact.name}\n                    email={contact.email}\n                    id={contact.contactId}\n                  />\n                ) : null}\n              </li>\n          ))}\n          {showAddModal ? (\n            <AddModal\n              show={showAddModal}\n              setShow={setShowAddModal}\n            />\n          ) : null}\n        </ul>\n      </main>\n    </>\n  )\n}\n","/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Add.js",[],[],"/home/mateo/Escritorio/programacion/Contacts-App/client/src/components/Edit.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":33,"column":6,"nodeType":"61","endLine":33,"endColumn":37,"suggestions":"62"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'instance', 'navigate', and 'setName'. Either include them or remove the dependency array. If 'setName' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["63"],{"desc":"64","fix":"65"},"Update the dependencies array to be: [setContactsList, contactsList, instance, setName, navigate]",{"range":"66","text":"67"},[1064,1095],"[setContactsList, contactsList, instance, setName, navigate]"]